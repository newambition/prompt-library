"""Add user_id to prompts and prompt_versions for user-specific data

Revision ID: e47e2e81942b
Revises: 606c3da54fae
Create Date: 2025-05-28 03:59:48.263756

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e47e2e81942b'
down_revision: Union[str, None] = '606c3da54fae'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. Add user_id as nullable
    op.add_column('prompts', sa.Column('user_id', sa.String(), nullable=True))
    op.add_column('prompt_versions', sa.Column('user_id', sa.String(), nullable=True))

    # 2. Set user_id for all existing rows to 'legacy'
    op.execute("UPDATE prompts SET user_id = 'legacy'")
    op.execute("UPDATE prompt_versions SET user_id = 'legacy'")

    # 3. Alter columns to be NOT NULL
    op.alter_column('prompts', 'user_id', nullable=False)
    op.alter_column('prompt_versions', 'user_id', nullable=False)

    # 4. Add indexes (no foreign key on user_id, as user_id is not unique in prompts)
    op.create_index('ix_prompt_user_id', 'prompts', ['user_id'], unique=False)
    op.create_index(op.f('ix_prompts_user_id'), 'prompts', ['user_id'], unique=False)
    op.create_index(op.f('ix_prompt_versions_user_id'), 'prompt_versions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_prompts_user_id'), table_name='prompts')
    op.drop_index('ix_prompt_user_id', table_name='prompts')
    op.drop_column('prompts', 'user_id')
    op.drop_column('prompt_versions', 'user_id')
    op.drop_index(op.f('ix_prompt_versions_user_id'), table_name='prompt_versions')
    # ### end Alembic commands ###
