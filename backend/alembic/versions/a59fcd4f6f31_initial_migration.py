"""Initial migration

Revision ID: a59fcd4f6f31
Revises: 
Create Date: 2025-05-13 00:27:57.582861

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a59fcd4f6f31'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('prompts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('prompt_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=False),
    sa.Column('latest_version', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('prompts', schema=None) as batch_op:
        batch_op.create_index('ix_prompt_title', ['title'], unique=False)
        batch_op.create_index(batch_op.f('ix_prompts_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_prompts_prompt_id'), ['prompt_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_prompts_title'), ['title'], unique=False)

    op.create_table('versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version_id', sa.String(), nullable=False),
    sa.Column('date', sa.String(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('prompt_db_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['prompt_db_id'], ['prompts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('versions', schema=None) as batch_op:
        batch_op.create_index('ix_version_prompt_id_version_id', ['prompt_db_id', 'version_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_versions_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_versions_version_id'), ['version_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('versions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_versions_version_id'))
        batch_op.drop_index(batch_op.f('ix_versions_id'))
        batch_op.drop_index('ix_version_prompt_id_version_id')

    op.drop_table('versions')
    with op.batch_alter_table('prompts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_prompts_title'))
        batch_op.drop_index(batch_op.f('ix_prompts_prompt_id'))
        batch_op.drop_index(batch_op.f('ix_prompts_id'))
        batch_op.drop_index('ix_prompt_title')

    op.drop_table('prompts')
    # ### end Alembic commands ###
